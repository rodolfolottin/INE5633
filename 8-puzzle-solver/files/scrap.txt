# MELHOR HEURISTICA = ?
    # Euclidean: Take the square root of the sum of the squares of the differences of the coordinates.
    # For example, if x=(a,b)x=(a,b) and y=(c,d)y=(c,d), the Euclidean distance between x and y is ²√(a−c)^2+(b−d)^2.
    # HEURISTICA DE MANHATTAN For example, if x=(a,b)x=(a,b) and y=(c,d)y=(c,d), the Manhatten distance between x and y is |a−c|+|b−d|.
    # For your vectors, it's the same thing, except you have more coordinates.

#TICKET 0: Pesquisar sobre como ordernar um dicionário ou até alterar Estrutura para OrderedDict
TICKETS
#TICKET 1: Organizar classe e atributos que serão dela. Buscar boas práticas, formatação.
#TICKET 2: Analisar passagens parametro funções. Evitar encavalação repetida
#TICKET 3: Implementar funções de heuristicas
#TICKET 4: Função para ordernar lista de fronteiras
#TICKET 5: Função para colocar nodos já visitados na lista de Visitados
#TICKET 6: Como vou chamar o pai do nodo até encontrar o inicial?
#TICKET 7: Como utilizar getters e setters em objetos em python?

# Docstrings: Função utilizada para imprimir um espaço de estado do quebra cabeça de 8 peças
# def printListAsMatrix(self):
#     for i in xrange(0, 9, 3):
#         print('- - - - - - - - - -')
#         print('|  ' + str(self.G['Fronteiras'][0].estadoTabuleiro.[i]) + '  |  ' + str(self.G['Fronteiras'][0].estadoTabuleiro.[i+1]) + '  |  ' + str(self.G['Fronteiras'][0].estadoTabuleiro.[i+2]) + '  |')
#     print('- - - - - - - - - -')